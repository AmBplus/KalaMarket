<?xml version="1.0" encoding="utf-8"?>

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="${basedir}/logs/internal-nlog-AspNetCore.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore" />
	</extensions>

	<!-- the targets to write to -->
	<targets async="true">
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="jsonFile" fileName="logs/Detail**${shortdate}__${####}.log"
		        archiveAboveSize="102400"
		        encoding="utf-8"
		        includeEventProperties="Boolean" excludeProperties="Comma-separated list (string)"
		        renderEmptyObject="false"
		        excludeEmptyProperties="false"
		        IncludeEmptyValue="false">
			<layout type="JsonLayout">
				<attribute name="level" layout="${level:upperCase=true}" />
				<attribute name="message" layout="${message}" />
				<attribute name="eventProperties" encode="false">
					<layout type="JsonLayout" includeAllProperties="true" maxRecursionLimit="10" />
				</attribute>
				<attribute name="time" layout="${longdate}" />
			</layout>
		</target>


		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="ownFile-web" fileName="${basedir}/logs/logProgram__${shortdate}--${####}.log"
		        layout="${level:uppercase=true} |***| ${message} ${exception:format=tostring} |***| ${longdate} |***| ${event-properties:item=EventId:whenEmpty=0}|***| ${logger}|" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
	</targets>

	<!--<targets async="true">
		<target xsi:type="File" name="jsonFile" fileName="logs/jsonlog.log">
		
		</target>
	</targets>-->

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Info" writeTo="jsonFile" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />

		<logger name="*" minlevel="Info" writeTo="ownFile-web" />
	</rules>
</nlog>