{ "level": "ERROR", "message": "Failed executing DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT [p].[Id], [p].[InsertTime], [p].[IsRemoved], [p].[ProductId], [p].[ProductName], [p].[RemoveTime], [p].[Src], [p].[UpdateTime]\r\nFROM [ProductImages] AS [p]", "eventProperties": { "elapsed": "0", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT [p].[Id], [p].[InsertTime], [p].[IsRemoved], [p].[ProductId], [p].[ProductName], [p].[RemoveTime], [p].[Src], [p].[UpdateTime]\r\nFROM [ProductImages] AS [p]", "EventId": 20102, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandError" }, "time": "2022-09-25 14:05:32.6605" }
{ "level": "ERROR", "message": "An exception occurred while iterating over the results of a query for context type 'KalaMarket.Persistence.Context.KalaMarketContext'.\r\nMicrosoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'ProductName'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)\r\n   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)\r\n   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)\r\n   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()\r\nClientConnectionId:c6715343-bb0c-4799-b925-699ada0c3c6b\r\nError Number:207,State:1,Class:16", "eventProperties": { "contextType": "KalaMarket.Persistence.Context.KalaMarketContext", "newline": "\r\n", "error": {"Type":"Microsoft.Data.SqlClient.SqlException", "Errors":[{"Source":"Core Microsoft SqlClient Data Provider", "Number":207, "State":1, "Class":16, "Server":".", "Message":"Invalid column name 'ProductName'.", "Procedure":"", "LineNumber":1}], "ClientConnectionId":"c6715343-bb0c-4799-b925-699ada0c3c6b", "Class":16, "LineNumber":1, "Number":207, "Procedure":"", "Server":".", "State":1, "Source":"Core Microsoft SqlClient Data Provider", "IsTransient":false, "ErrorCode":-2146232060, "TargetSite":"Void OnError(Microsoft.Data.SqlClient.SqlException, Boolean, System.Action`1[System.Action])", "Message":"Invalid column name 'ProductName'.", "Data":{"HelpLink.ProdName":"Microsoft SQL Server","HelpLink.ProdVer":"15.00.2000","HelpLink.EvtSrc":"MSSQLServer","HelpLink.EvtID":"207","HelpLink.BaseHelpUrl":"https://go.microsoft.com/fwlink","HelpLink.LinkId":"20476"}, "HResult":-2146232060, "StackTrace":"   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)\r\n   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)\r\n   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)\r\n   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()"}, "EventId": 10100, "EventName": "Microsoft.EntityFrameworkCore.Query.QueryIterationFailed" }, "time": "2022-09-25 14:05:32.6605" }
{ "level": "ERROR", "message": "An exception occurred in the database while saving changes for context type 'KalaMarket.Persistence.Context.KalaMarketContext'.\r\nMicrosoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert duplicate key row in object 'dbo.Categories' with unique index 'IX_Categories_Name'. The duplicate key value is (سامسونگ).\r\nThe statement has been terminated.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)\r\n   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)\r\n   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)\r\n   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\nClientConnectionId:c6715343-bb0c-4799-b925-699ada0c3c6b\r\nError Number:2601,State:1,Class:14\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)", "eventProperties": { "contextType": "KalaMarket.Persistence.Context.KalaMarketContext", "newline": "\r\n", "error": {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[{"Name":"Admin", "Id":1, "InsertTime":"2022-09-15T15:48:49.889068Z", "UpdateTime":"2022-09-15T15:48:49.8890621Z", "IsRemoved":false},{"Name":"Operator", "Id":2, "InsertTime":"2022-09-15T15:48:49.8890787Z", "UpdateTime":"2022-09-15T15:48:49.8890732Z", "IsRemoved":false},{"Name":"Customer", "Id":3, "InsertTime":"2022-09-15T15:48:49.8890808Z", "UpdateTime":"2022-09-15T15:48:49.8890801Z", "IsRemoved":false}], "Categories":[{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false},{"CategoryType":1, "Name":"مواد غذایی و خواربار", "Id":3, "InsertTime":"2022-09-15T05:22:29.0846088Z", "UpdateTime":"2022-09-15T05:22:29.0846032Z", "IsRemoved":false},{"CategoryType":1, "Name":"الکترونیک", "Id":4, "InsertTime":"2022-09-15T05:22:34.6472623Z", "UpdateTime":"2022-09-15T05:22:34.6472574Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم صورت", "ParentCategory":{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":[], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false}, "ParentCategoryId":1, "Id":5, "InsertTime":"2022-09-15T05:22:50.6815228Z", "UpdateTime":"2022-09-15T05:22:50.6815212Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم دست", "ParentCategory":{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":[{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم صورت", "ParentCategoryId":1, "Id":5, "InsertTime":"2022-09-15T05:22:50.6815228Z", "UpdateTime":"2022-09-15T05:22:50.6815212Z", "IsRemoved":false}], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false}, "ParentCategoryId":1, "Id":6, "InsertTime":"2022-09-15T05:26:29.6524952Z", "UpdateTime":"2022-09-15T05:26:29.6524928Z", "IsRemoved":false},{"CategoryType":1, "Name":"کرم پا", "Id":7, "InsertTime":"2022-09-15T05:26:59.4659739Z", "UpdateTime":"2022-09-15T05:26:59.4659621Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم بدن", "ParentCategory":{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":[{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم صورت", "ParentCategoryId":1, "Id":5, "InsertTime":"2022-09-15T05:22:50.6815228Z", "UpdateTime":"2022-09-15T05:22:50.6815212Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم دست", "ParentCategoryId":1, "Id":6, "InsertTime":"2022-09-15T05:26:29.6524952Z", "UpdateTime":"2022-09-15T05:26:29.6524928Z", "IsRemoved":false}], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false}, "ParentCategoryId":1, "Id":8, "InsertTime":"2022-09-15T05:27:22.6137622Z", "UpdateTime":"2022-09-15T05:27:22.6137607Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم پوست", "ParentCategory":{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":[{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم صورت", "ParentCategoryId":1, "Id":5, "InsertTime":"2022-09-15T05:22:50.6815228Z", "UpdateTime":"2022-09-15T05:22:50.6815212Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم دست", "ParentCategoryId":1, "Id":6, "InsertTime":"2022-09-15T05:26:29.6524952Z", "UpdateTime":"2022-09-15T05:26:29.6524928Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم بدن", "ParentCategoryId":1, "Id":8, "InsertTime":"2022-09-15T05:27:22.6137622Z", "UpdateTime":"2022-09-15T05:27:22.6137607Z", "IsRemoved":false}], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false}, "ParentCategoryId":1, "Id":9, "InsertTime":"2022-09-15T05:27:37.3017153Z", "UpdateTime":"2022-09-15T05:27:37.3017126Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد غذایی و خواربار", "Name":"آشامیدنی", "ParentCategory":{"CategoryType":1, "Name":"مواد غذایی و خواربار", "SubCategories":[], "Id":3, "InsertTime":"2022-09-15T05:22:29.0846088Z", "UpdateTime":"2022-09-15T05:22:29.0846032Z", "IsRemoved":false}, "ParentCategoryId":3, "Id":10, "InsertTime":"2022-09-18T02:30:59.3150654Z", "UpdateTime":"2022-09-18T02:30:59.3150614Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد غذایی و خواربار", "Name":"حبوبات", "ParentCategory":{"CategoryType":1, "Name":"مواد غذایی و خواربار", "SubCategories":[{"CategoryType":2, "ParentName":"مواد غذایی و خواربار", "Name":"آشامیدنی", "ParentCategoryId":3, "Id":10, "InsertTime":"2022-09-18T02:30:59.3150654Z", "UpdateTime":"2022-09-18T02:30:59.3150614Z", "IsRemoved":false}], "Id":3, "InsertTime":"2022-09-15T05:22:29.0846088Z", "UpdateTime":"2022-09-15T05:22:29.0846032Z", "IsRemoved":false}, "ParentCategoryId":3, "Id":11, "InsertTime":"2022-09-18T02:31:14.4232151Z", "UpdateTime":"2022-09-18T02:31:14.4232136Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد غذایی و خواربار", "Name":"شیرینی", "ParentCategory":{"CategoryType":1, "Name":"مواد غذایی و خواربار", "SubCategories":[{"CategoryType":2, "ParentName":"مواد غذایی و خواربار", "Name":"آشامیدنی", "ParentCategoryId":3, "Id":10, "InsertTime":"2022-09-18T02:30:59.3150654Z", "UpdateTime":"2022-09-18T02:30:59.3150614Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد غذایی و خواربار", "Name":"حبوبات", "ParentCategoryId":3, "Id":11, "InsertTime":"2022-09-18T02:31:14.4232151Z", "UpdateTime":"2022-09-18T02:31:14.4232136Z", "IsRemoved":false}], "Id":3, "InsertTime":"2022-09-15T05:22:29.0846088Z", "UpdateTime":"2022-09-15T05:22:29.0846032Z", "IsRemoved":false}, "ParentCategoryId":3, "Id":12, "InsertTime":"2022-09-18T02:31:35.7856579Z", "UpdateTime":"2022-09-18T02:31:35.7856553Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"الکترونیک", "Name":"لپ تاب", "ParentCategory":{"CategoryType":1, "Name":"الکترونیک", "SubCategories":[], "Id":4, "InsertTime":"2022-09-15T05:22:34.6472623Z", "UpdateTime":"2022-09-15T05:22:34.6472574Z", "IsRemoved":false}, "ParentCategoryId":4, "Id":13, "InsertTime":"2022-09-18T02:31:50.3283406Z", "UpdateTime":"2022-09-18T02:31:50.328338Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"الکترونیک", "Name":"موبایل", "ParentCategory":{"CategoryType":1, "Name":"الکترونیک", "SubCategories":[{"CategoryType":2, "ParentName":"الکترونیک", "Name":"لپ تاب", "ParentCategoryId":4, "Id":13, "InsertTime":"2022-09-18T02:31:50.3283406Z", "UpdateTime":"2022-09-18T02:31:50.328338Z", "IsRemoved":false}], "Id":4, "InsertTime":"2022-09-15T05:22:34.6472623Z", "UpdateTime":"2022-09-15T05:22:34.6472574Z", "IsRemoved":false}, "ParentCategoryId":4, "Id":14, "InsertTime":"2022-09-18T02:32:10.8522021Z", "UpdateTime":"2022-09-18T02:32:10.8521984Z", "IsRemoved":false},{"CategoryType":1, "Name":"اپل", "Id":15, "InsertTime":"2022-09-25T14:00:54.0724198Z", "UpdateTime":"2022-09-25T14:00:54.0724015Z", "IsRemoved":false},{"CategoryType":1, "Name":"سامسونگ", "Id":16, "InsertTime":"2022-09-25T14:02:07.5711633Z", "UpdateTime":"2022-09-25T14:02:07.5711584Z", "IsRemoved":false}], "Products":[], "Brands":[], "ProductFeatures":[], "Database":{"AutoTransactionsEnabled":true, "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []\r\nCategory {Id: 1} Unchanged\r\n  Id: 1 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/15/2022 5:21:09 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'مواد بهداشتی و آرایشی'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:21:09 AM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: [{Id: 5}, {Id: 6}, {Id: 8}, {Id: 9}]\r\nCategory {Id: 3} Unchanged\r\n  Id: 3 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/15/2022 5:22:29 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'مواد غذایی و خواربار'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:22:29 AM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: [{Id: 10}, {Id: 11}, {Id: 12}]\r\nCategory {Id: 4} Unchanged\r\n  Id: 4 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/15/2022 5:22:34 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'الکترونیک'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:22:34 AM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: [{Id: 13}, {Id: 14}]\r\nCategory {Id: 5} Unchanged\r\n  Id: 5 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/15/2022 5:22:50 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم صورت'\r\n  ParentCategoryId: 1 FK\r\n  ParentName: 'مواد بهداشتی و آرایشی'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:22:50 AM'\r\n  ParentCategory: {Id: 1}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 6} Unchanged\r\n  Id: 6 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/15/2022 5:26:29 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم دست'\r\n  ParentCategoryId: 1 FK\r\n  ParentName: 'مواد بهداشتی و آرایشی'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:26:29 AM'\r\n  ParentCategory: {Id: 1}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 7} Unchanged\r\n  Id: 7 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/15/2022 5:26:59 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم پا'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:26:59 AM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 8} Unchanged\r\n  Id: 8 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/15/2022 5:27:22 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم بدن'\r\n  ParentCategoryId: 1 FK\r\n  ParentName: 'مواد بهداشتی و آرایشی'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:27:22 AM'\r\n  ParentCategory: {Id: 1}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 9} Unchanged\r\n  Id: 9 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/15/2022 5:27:37 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم پوست'\r\n  ParentCategoryId: 1 FK\r\n  ParentName: 'مواد بهداشتی و آرایشی'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:27:37 AM'\r\n  ParentCategory: {Id: 1}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 10} Unchanged\r\n  Id: 10 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:30:59 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'آشامیدنی'\r\n  ParentCategoryId: 3 FK\r\n  ParentName: 'مواد غذایی و خواربار'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:30:59 AM'\r\n  ParentCategory: {Id: 3}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 11} Unchanged\r\n  Id: 11 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:31:14 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'حبوبات'\r\n  ParentCategoryId: 3 FK\r\n  ParentName: 'مواد غذایی و خواربار'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:31:14 AM'\r\n  ParentCategory: {Id: 3}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 12} Unchanged\r\n  Id: 12 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:31:35 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'شیرینی'\r\n  ParentCategoryId: 3 FK\r\n  ParentName: 'مواد غذایی و خواربار'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:31:35 AM'\r\n  ParentCategory: {Id: 3}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 13} Unchanged\r\n  Id: 13 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:31:50 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'لپ تاب'\r\n  ParentCategoryId: 4 FK\r\n  ParentName: 'الکترونیک'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:31:50 AM'\r\n  ParentCategory: {Id: 4}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 14} Unchanged\r\n  Id: 14 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:32:10 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'موبایل'\r\n  ParentCategoryId: 4 FK\r\n  ParentName: 'الکترونیک'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:32:10 AM'\r\n  ParentCategory: {Id: 4}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 15} Unchanged\r\n  Id: 15 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:00:54 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'اپل'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:00:54 PM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 16} Unchanged\r\n  Id: 16 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:02:07 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:02:07 PM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: <null>\r\nRole {Id: 1} Unchanged\r\n  Id: 1 PK\r\n  InsertTime: '9/15/2022 3:48:49 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'Admin'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 3:48:49 PM'\r\n  UserInRoles: <null>\r\nRole {Id: 2} Unchanged\r\n  Id: 2 PK\r\n  InsertTime: '9/15/2022 3:48:49 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'Operator'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 3:48:49 PM'\r\n  UserInRoles: <null>\r\nRole {Id: 3} Unchanged\r\n  Id: 3 PK\r\n  InsertTime: '9/15/2022 3:48:49 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'Customer'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 3:48:49 PM'\r\n  UserInRoles: <null>\r\n", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}\r\nCategory {Id: 1} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 3} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 4} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 5} Unchanged FK {ParentCategoryId: 1}\r\nCategory {Id: 6} Unchanged FK {ParentCategoryId: 1}\r\nCategory {Id: 7} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 8} Unchanged FK {ParentCategoryId: 1}\r\nCategory {Id: 9} Unchanged FK {ParentCategoryId: 1}\r\nCategory {Id: 10} Unchanged FK {ParentCategoryId: 3}\r\nCategory {Id: 11} Unchanged FK {ParentCategoryId: 3}\r\nCategory {Id: 12} Unchanged FK {ParentCategoryId: 3}\r\nCategory {Id: 13} Unchanged FK {ParentCategoryId: 4}\r\nCategory {Id: 14} Unchanged FK {ParentCategoryId: 4}\r\nCategory {Id: 15} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 16} Unchanged FK {ParentCategoryId: <null>}\r\nRole {Id: 1} Unchanged\r\nRole {Id: 2} Unchanged\r\nRole {Id: 3} Unchanged\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}, "ContextId":{"InstanceId":"1371f74d-8f43-4855-8127-f00a3cc085a6", "Lease":0}}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    CategoryType (byte) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    InsertTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    IsRemoved (bool) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required Index MaxLength(50)\r\n      Annotations: \r\n        MaxLength: 50\r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentCategoryId (long?) FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentName (string)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RemoveTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UpdateTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId \r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Categories\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    CategoryType (byte) Required\r\n    InsertTime (DateTime) Required\r\n    IsRemoved (bool) Required\r\n    Name (string) Required Index MaxLength(50)\r\n    ParentCategoryId (long?) FK Index\r\n    ParentName (string)\r\n    RemoveTime (DateTime?)\r\n    UpdateTime (DateTime?)\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId "}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    CategoryType (byte) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    InsertTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    IsRemoved (bool) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required Index MaxLength(50)\r\n      Annotations: \r\n        MaxLength: 50\r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentCategoryId (long?) FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentName (string)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RemoveTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UpdateTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId \r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Categories\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    CategoryType (byte) Required\r\n    InsertTime (DateTime) Required\r\n    IsRemoved (bool) Required\r\n    Name (string) Required Index MaxLength(50)\r\n    ParentCategoryId (long?) FK Index\r\n    ParentName (string)\r\n    RemoveTime (DateTime?)\r\n    UpdateTime (DateTime?)\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId "}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    CategoryType (byte) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    InsertTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    IsRemoved (bool) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required Index MaxLength(50)\r\n      Annotations: \r\n        MaxLength: 50\r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentCategoryId (long?) FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentName (string)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RemoveTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UpdateTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId \r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Categories\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    CategoryType (byte) Required\r\n    InsertTime (DateTime) Required\r\n    IsRemoved (bool) Required\r\n    Name (string) Required Index MaxLength(50)\r\n    ParentCategoryId (long?) FK Index\r\n    ParentName (string)\r\n    RemoveTime (DateTime?)\r\n    UpdateTime (DateTime?)\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId "}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":["Property: Product.CategoryId (long) Required FK Index"], "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Product", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade", "ShortView":"Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade"}, "IsReadOnly":false},{"Properties":["Property: Category.ParentCategoryId (long?) FK Index"], "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull", "ShortView":"Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull"}, "IsReadOnly":false}], "DebugView":{"LongView":"Id PK", "ShortView":"Id PK"}, "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    CategoryType (byte) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    InsertTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    IsRemoved (bool) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required Index MaxLength(50)\r\n      Annotations: \r\n        MaxLength: 50\r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentCategoryId (long?) FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentName (string)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RemoveTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UpdateTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId \r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Categories\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    CategoryType (byte) Required\r\n    InsertTime (DateTime) Required\r\n    IsRemoved (bool) Required\r\n    Name (string) Required Index MaxLength(50)\r\n    ParentCategoryId (long?) FK Index\r\n    ParentName (string)\r\n    RemoveTime (DateTime?)\r\n    UpdateTime (DateTime?)\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId "}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":[], "DeclaringEntityType":"EntityType: Product", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}], "DebugView":{"LongView":"Id PK", "ShortView":"Id PK"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":{"Type":"System.Int64", "EqualsExpression":{"Type":"System.Func`3[System.Int64,System.Int64,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int64,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int64,System.Int64]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int64", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int64", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int64,System.Int64,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int64,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int64,System.Int64]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int64", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int64", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int64", "EqualsExpression":{"Type":"System.Func`3[System.Int64,System.Int64,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int64,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int64,System.Int64]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int64", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int64", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int64,System.Int64,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int64,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int64,System.Int64]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int64", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int64", "TailCall":false, "CanReduce":false}}, "StructuralComparer":{"Type":"System.Int64", "EqualsExpression":{"Type":"System.Func`3[System.Int64,System.Int64,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int64,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int64,System.Int64]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int64", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int64", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int64,System.Int64,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int64,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int64,System.Int64]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int64", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int64", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"Id", "IsReadOnly":false}, "OriginalValue":-9223372036854774804, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    CategoryType (byte) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    InsertTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    IsRemoved (bool) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required Index MaxLength(50)\r\n      Annotations: \r\n        MaxLength: 50\r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentCategoryId (long?) FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentName (string)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RemoveTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UpdateTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId \r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Categories\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    CategoryType (byte) Required\r\n    InsertTime (DateTime) Required\r\n    IsRemoved (bool) Required\r\n    Name (string) Required Index MaxLength(50)\r\n    ParentCategoryId (long?) FK Index\r\n    ParentName (string)\r\n    RemoveTime (DateTime?)\r\n    UpdateTime (DateTime?)\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId "}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    CategoryType (byte) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    InsertTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    IsRemoved (bool) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required Index MaxLength(50)\r\n      Annotations: \r\n        MaxLength: 50\r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentCategoryId (long?) FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentName (string)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RemoveTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UpdateTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId \r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Categories\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    CategoryType (byte) Required\r\n    InsertTime (DateTime) Required\r\n    IsRemoved (bool) Required\r\n    Name (string) Required Index MaxLength(50)\r\n    ParentCategoryId (long?) FK Index\r\n    ParentName (string)\r\n    RemoveTime (DateTime?)\r\n    UpdateTime (DateTime?)\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId "}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":["Property: Product.CategoryId (long) Required FK Index"], "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Product", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade", "ShortView":"Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade"}, "IsReadOnly":false},{"Properties":["Property: Category.ParentCategoryId (long?) FK Index"], "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull", "ShortView":"Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull"}, "IsReadOnly":false}], "DebugView":{"LongView":"Id PK", "ShortView":"Id PK"}, "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    CategoryType (byte) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    InsertTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    IsRemoved (bool) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required Index MaxLength(50)\r\n      Annotations: \r\n        MaxLength: 50\r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentCategoryId (long?) FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentName (string)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RemoveTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UpdateTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId \r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Categories\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    CategoryType (byte) Required\r\n    InsertTime (DateTime) Required\r\n    IsRemoved (bool) Required\r\n    Name (string) Required Index MaxLength(50)\r\n    ParentCategoryId (long?) FK Index\r\n    ParentName (string)\r\n    RemoveTime (DateTime?)\r\n    UpdateTime (DateTime?)\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId "}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":[], "DeclaringEntityType":"EntityType: Product", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}], "DebugView":{"LongView":"Id PK", "ShortView":"Id PK"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":{"Type":"System.Int64", "EqualsExpression":{"Type":"System.Func`3[System.Int64,System.Int64,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int64,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int64,System.Int64]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int64", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int64", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int64,System.Int64,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int64,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int64,System.Int64]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int64", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int64", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int64", "EqualsExpression":{"Type":"System.Func`3[System.Int64,System.Int64,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int64,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int64,System.Int64]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int64", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int64", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int64,System.Int64,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int64,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int64,System.Int64]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int64", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int64", "TailCall":false, "CanReduce":false}}, "StructuralComparer":{"Type":"System.Int64", "EqualsExpression":{"Type":"System.Func`3[System.Int64,System.Int64,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int64,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int64,System.Int64]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int64", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int64", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int64,System.Int64,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int64,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int64,System.Int64]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int64", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int64", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"Id", "IsReadOnly":false}, "CurrentValue":-9223372036854774804, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[{"Name":"Admin", "Id":1, "InsertTime":"2022-09-15T15:48:49.889068Z", "UpdateTime":"2022-09-15T15:48:49.8890621Z", "IsRemoved":false},{"Name":"Operator", "Id":2, "InsertTime":"2022-09-15T15:48:49.8890787Z", "UpdateTime":"2022-09-15T15:48:49.8890732Z", "IsRemoved":false},{"Name":"Customer", "Id":3, "InsertTime":"2022-09-15T15:48:49.8890808Z", "UpdateTime":"2022-09-15T15:48:49.8890801Z", "IsRemoved":false}], "Categories":[{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":["KalaMarket.Domain.Entities.ProductAgg.Category","KalaMarket.Domain.Entities.ProductAgg.Category","KalaMarket.Domain.Entities.ProductAgg.Category","KalaMarket.Domain.Entities.ProductAgg.Category"], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false},{"CategoryType":1, "Name":"مواد غذایی و خواربار", "SubCategories":["KalaMarket.Domain.Entities.ProductAgg.Category","KalaMarket.Domain.Entities.ProductAgg.Category","KalaMarket.Domain.Entities.ProductAgg.Category"], "Id":3, "InsertTime":"2022-09-15T05:22:29.0846088Z", "UpdateTime":"2022-09-15T05:22:29.0846032Z", "IsRemoved":false},{"CategoryType":1, "Name":"الکترونیک", "SubCategories":["KalaMarket.Domain.Entities.ProductAgg.Category","KalaMarket.Domain.Entities.ProductAgg.Category"], "Id":4, "InsertTime":"2022-09-15T05:22:34.6472623Z", "UpdateTime":"2022-09-15T05:22:34.6472574Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم صورت", "ParentCategory":{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":[], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false}, "ParentCategoryId":1, "Id":5, "InsertTime":"2022-09-15T05:22:50.6815228Z", "UpdateTime":"2022-09-15T05:22:50.6815212Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم دست", "ParentCategory":{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":[], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false}, "ParentCategoryId":1, "Id":6, "InsertTime":"2022-09-15T05:26:29.6524952Z", "UpdateTime":"2022-09-15T05:26:29.6524928Z", "IsRemoved":false},{"CategoryType":1, "Name":"کرم پا", "Id":7, "InsertTime":"2022-09-15T05:26:59.4659739Z", "UpdateTime":"2022-09-15T05:26:59.4659621Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم بدن", "ParentCategory":{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":[], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false}, "ParentCategoryId":1, "Id":8, "InsertTime":"2022-09-15T05:27:22.6137622Z", "UpdateTime":"2022-09-15T05:27:22.6137607Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم پوست", "ParentCategory":{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":[], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false}, "ParentCategoryId":1, "Id":9, "InsertTime":"2022-09-15T05:27:37.3017153Z", "UpdateTime":"2022-09-15T05:27:37.3017126Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد غذایی و خواربار", "Name":"آشامیدنی", "ParentCategory":{"CategoryType":1, "Name":"مواد غذایی و خواربار", "SubCategories":[], "Id":3, "InsertTime":"2022-09-15T05:22:29.0846088Z", "UpdateTime":"2022-09-15T05:22:29.0846032Z", "IsRemoved":false}, "ParentCategoryId":3, "Id":10, "InsertTime":"2022-09-18T02:30:59.3150654Z", "UpdateTime":"2022-09-18T02:30:59.3150614Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد غذایی و خواربار", "Name":"حبوبات", "ParentCategory":{"CategoryType":1, "Name":"مواد غذایی و خواربار", "SubCategories":[], "Id":3, "InsertTime":"2022-09-15T05:22:29.0846088Z", "UpdateTime":"2022-09-15T05:22:29.0846032Z", "IsRemoved":false}, "ParentCategoryId":3, "Id":11, "InsertTime":"2022-09-18T02:31:14.4232151Z", "UpdateTime":"2022-09-18T02:31:14.4232136Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد غذایی و خواربار", "Name":"شیرینی", "ParentCategory":{"CategoryType":1, "Name":"مواد غذایی و خواربار", "SubCategories":[], "Id":3, "InsertTime":"2022-09-15T05:22:29.0846088Z", "UpdateTime":"2022-09-15T05:22:29.0846032Z", "IsRemoved":false}, "ParentCategoryId":3, "Id":12, "InsertTime":"2022-09-18T02:31:35.7856579Z", "UpdateTime":"2022-09-18T02:31:35.7856553Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"الکترونیک", "Name":"لپ تاب", "ParentCategory":{"CategoryType":1, "Name":"الکترونیک", "SubCategories":[], "Id":4, "InsertTime":"2022-09-15T05:22:34.6472623Z", "UpdateTime":"2022-09-15T05:22:34.6472574Z", "IsRemoved":false}, "ParentCategoryId":4, "Id":13, "InsertTime":"2022-09-18T02:31:50.3283406Z", "UpdateTime":"2022-09-18T02:31:50.328338Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"الکترونیک", "Name":"موبایل", "ParentCategory":{"CategoryType":1, "Name":"الکترونیک", "SubCategories":[], "Id":4, "InsertTime":"2022-09-15T05:22:34.6472623Z", "UpdateTime":"2022-09-15T05:22:34.6472574Z", "IsRemoved":false}, "ParentCategoryId":4, "Id":14, "InsertTime":"2022-09-18T02:32:10.8522021Z", "UpdateTime":"2022-09-18T02:32:10.8521984Z", "IsRemoved":false},{"CategoryType":1, "Name":"اپل", "Id":15, "InsertTime":"2022-09-25T14:00:54.0724198Z", "UpdateTime":"2022-09-25T14:00:54.0724015Z", "IsRemoved":false},{"CategoryType":1, "Name":"سامسونگ", "Id":16, "InsertTime":"2022-09-25T14:02:07.5711633Z", "UpdateTime":"2022-09-25T14:02:07.5711584Z", "IsRemoved":false}], "Products":[], "Brands":[], "ProductFeatures":[], "Database":{"AutoTransactionsEnabled":true, "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []\r\nCategory {Id: 1} Unchanged\r\n  Id: 1 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/15/2022 5:21:09 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'مواد بهداشتی و آرایشی'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:21:09 AM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: [{Id: 5}, {Id: 6}, {Id: 8}, {Id: 9}]\r\nCategory {Id: 3} Unchanged\r\n  Id: 3 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/15/2022 5:22:29 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'مواد غذایی و خواربار'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:22:29 AM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: [{Id: 10}, {Id: 11}, {Id: 12}]\r\nCategory {Id: 4} Unchanged\r\n  Id: 4 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/15/2022 5:22:34 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'الکترونیک'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:22:34 AM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: [{Id: 13}, {Id: 14}]\r\nCategory {Id: 5} Unchanged\r\n  Id: 5 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/15/2022 5:22:50 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم صورت'\r\n  ParentCategoryId: 1 FK\r\n  ParentName: 'مواد بهداشتی و آرایشی'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:22:50 AM'\r\n  ParentCategory: {Id: 1}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 6} Unchanged\r\n  Id: 6 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/15/2022 5:26:29 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم دست'\r\n  ParentCategoryId: 1 FK\r\n  ParentName: 'مواد بهداشتی و آرایشی'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:26:29 AM'\r\n  ParentCategory: {Id: 1}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 7} Unchanged\r\n  Id: 7 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/15/2022 5:26:59 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم پا'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:26:59 AM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 8} Unchanged\r\n  Id: 8 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/15/2022 5:27:22 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم بدن'\r\n  ParentCategoryId: 1 FK\r\n  ParentName: 'مواد بهداشتی و آرایشی'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:27:22 AM'\r\n  ParentCategory: {Id: 1}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 9} Unchanged\r\n  Id: 9 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/15/2022 5:27:37 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم پوست'\r\n  ParentCategoryId: 1 FK\r\n  ParentName: 'مواد بهداشتی و آرایشی'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:27:37 AM'\r\n  ParentCategory: {Id: 1}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 10} Unchanged\r\n  Id: 10 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:30:59 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'آشامیدنی'\r\n  ParentCategoryId: 3 FK\r\n  ParentName: 'مواد غذایی و خواربار'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:30:59 AM'\r\n  ParentCategory: {Id: 3}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 11} Unchanged\r\n  Id: 11 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:31:14 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'حبوبات'\r\n  ParentCategoryId: 3 FK\r\n  ParentName: 'مواد غذایی و خواربار'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:31:14 AM'\r\n  ParentCategory: {Id: 3}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 12} Unchanged\r\n  Id: 12 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:31:35 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'شیرینی'\r\n  ParentCategoryId: 3 FK\r\n  ParentName: 'مواد غذایی و خواربار'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:31:35 AM'\r\n  ParentCategory: {Id: 3}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 13} Unchanged\r\n  Id: 13 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:31:50 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'لپ تاب'\r\n  ParentCategoryId: 4 FK\r\n  ParentName: 'الکترونیک'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:31:50 AM'\r\n  ParentCategory: {Id: 4}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 14} Unchanged\r\n  Id: 14 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:32:10 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'موبایل'\r\n  ParentCategoryId: 4 FK\r\n  ParentName: 'الکترونیک'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:32:10 AM'\r\n  ParentCategory: {Id: 4}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 15} Unchanged\r\n  Id: 15 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:00:54 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'اپل'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:00:54 PM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 16} Unchanged\r\n  Id: 16 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:02:07 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:02:07 PM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: <null>\r\nRole {Id: 1} Unchanged\r\n  Id: 1 PK\r\n  InsertTime: '9/15/2022 3:48:49 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'Admin'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 3:48:49 PM'\r\n  UserInRoles: <null>\r\nRole {Id: 2} Unchanged\r\n  Id: 2 PK\r\n  InsertTime: '9/15/2022 3:48:49 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'Operator'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 3:48:49 PM'\r\n  UserInRoles: <null>\r\nRole {Id: 3} Unchanged\r\n  Id: 3 PK\r\n  InsertTime: '9/15/2022 3:48:49 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'Customer'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 3:48:49 PM'\r\n  UserInRoles: <null>\r\n", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}\r\nCategory {Id: 1} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 3} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 4} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 5} Unchanged FK {ParentCategoryId: 1}\r\nCategory {Id: 6} Unchanged FK {ParentCategoryId: 1}\r\nCategory {Id: 7} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 8} Unchanged FK {ParentCategoryId: 1}\r\nCategory {Id: 9} Unchanged FK {ParentCategoryId: 1}\r\nCategory {Id: 10} Unchanged FK {ParentCategoryId: 3}\r\nCategory {Id: 11} Unchanged FK {ParentCategoryId: 3}\r\nCategory {Id: 12} Unchanged FK {ParentCategoryId: 3}\r\nCategory {Id: 13} Unchanged FK {ParentCategoryId: 4}\r\nCategory {Id: 14} Unchanged FK {ParentCategoryId: 4}\r\nCategory {Id: 15} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 16} Unchanged FK {ParentCategoryId: <null>}\r\nRole {Id: 1} Unchanged\r\nRole {Id: 2} Unchanged\r\nRole {Id: 3} Unchanged\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}, "ContextId":{"InstanceId":"1371f74d-8f43-4855-8127-f00a3cc085a6", "Lease":0}}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    CategoryType (byte) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    InsertTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    IsRemoved (bool) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required Index MaxLength(50)\r\n      Annotations: \r\n        MaxLength: 50\r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentCategoryId (long?) FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentName (string)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RemoveTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UpdateTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId \r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Categories\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    CategoryType (byte) Required\r\n    InsertTime (DateTime) Required\r\n    IsRemoved (bool) Required\r\n    Name (string) Required Index MaxLength(50)\r\n    ParentCategoryId (long?) FK Index\r\n    ParentName (string)\r\n    RemoveTime (DateTime?)\r\n    UpdateTime (DateTime?)\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId "}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Category", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Keys":["Key: Category.Id PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]"}, "DebugView":{"LongView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"Id", "IsReadOnly":false}, "OriginalValue":-9223372036854774804, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Category", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Keys":["Key: Category.Id PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]"}, "DebugView":{"LongView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"Id", "IsReadOnly":false}, "CurrentValue":-9223372036854774804, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"tinyint", "StoreTypeNameBase":"tinyint", "DbType":"Byte", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Byte", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]"}, "DebugView":{"LongView":"CategoryType (byte) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"CategoryType (byte) Required"}, "Name":"CategoryType", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"tinyint", "StoreTypeNameBase":"tinyint", "DbType":"Byte", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Byte", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]"}, "DebugView":{"LongView":"CategoryType (byte) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"CategoryType (byte) Required"}, "Name":"CategoryType", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"InsertTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"InsertTime (DateTime) Required"}, "Name":"InsertTime", "IsReadOnly":false}, "OriginalValue":"2022-09-25T10:35:32.5509768Z", "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"InsertTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"InsertTime (DateTime) Required"}, "Name":"InsertTime", "IsReadOnly":false}, "CurrentValue":"2022-09-25T10:35:32.5509768Z", "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bit", "StoreTypeNameBase":"bit", "DbType":"Boolean", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Boolean", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]"}, "DebugView":{"LongView":"IsRemoved (bool) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"IsRemoved (bool) Required"}, "Name":"IsRemoved", "IsReadOnly":false}, "OriginalValue":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bit", "StoreTypeNameBase":"bit", "DbType":"Boolean", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Boolean", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]"}, "DebugView":{"LongView":"IsRemoved (bool) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"IsRemoved (bool) Required"}, "Name":"IsRemoved", "IsReadOnly":false}, "CurrentValue":false, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Indexes":["Index: Category.Name  Unique"], "TypeMapping":{"StoreTypePostfix":"Size", "StoreType":"nvarchar(50)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "Size":50, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required Index MaxLength(50)\r\n  Annotations: \r\n    MaxLength: 50\r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required Index MaxLength(50)"}, "Name":"Name", "IsReadOnly":false}, "OriginalValue":"سامسونگ", "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Indexes":["Index: Category.Name  Unique"], "TypeMapping":{"StoreTypePostfix":"Size", "StoreType":"nvarchar(50)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "Size":50, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required Index MaxLength(50)\r\n  Annotations: \r\n    MaxLength: 50\r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required Index MaxLength(50)"}, "Name":"Name", "IsReadOnly":false}, "CurrentValue":"سامسونگ", "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull"], "Indexes":["Index: Category.ParentCategoryId "], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]"}, "DebugView":{"LongView":"ParentCategoryId (long?) FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"ParentCategoryId (long?) FK Index"}, "Name":"ParentCategoryId", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull"], "Indexes":["Index: Category.ParentCategoryId "], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]"}, "DebugView":{"LongView":"ParentCategoryId (long?) FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"ParentCategoryId (long?) FK Index"}, "Name":"ParentCategoryId", "IsReadOnly":false}, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"ParentName (string)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"ParentName (string)"}, "Name":"ParentName", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"ParentName (string)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"ParentName (string)"}, "Name":"ParentName", "IsReadOnly":false}, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"RemoveTime (DateTime?)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RemoveTime (DateTime?)"}, "Name":"RemoveTime", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"RemoveTime (DateTime?)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RemoveTime (DateTime?)"}, "Name":"RemoveTime", "IsReadOnly":false}, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"UpdateTime (DateTime?)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UpdateTime (DateTime?)"}, "Name":"UpdateTime", "IsReadOnly":false}, "OriginalValue":"2022-09-25T10:35:32.5509439Z", "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"UpdateTime (DateTime?)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UpdateTime (DateTime?)"}, "Name":"UpdateTime", "IsReadOnly":false}, "CurrentValue":"2022-09-25T10:35:32.5509439Z", "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"ParentCategory (Category) ToPrincipal Category Inverse: SubCategories", "ShortView":"ParentCategory (Category) ToPrincipal Category Inverse: SubCategories"}, "Name":"ParentCategory", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"ParentCategory (Category) ToPrincipal Category Inverse: SubCategories", "ShortView":"ParentCategory (Category) ToPrincipal Category Inverse: SubCategories"}, "Name":"ParentCategory", "IsReadOnly":false}, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"CurrentValue":[], "IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Product", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Products (IList<Product>) Collection ToDependent Product Inverse: Category", "ShortView":"Products (IList<Product>) Collection ToDependent Product Inverse: Category"}, "Name":"Products", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Product", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Products (IList<Product>) Collection ToDependent Product Inverse: Category", "ShortView":"Products (IList<Product>) Collection ToDependent Product Inverse: Category"}, "Name":"Products", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"CurrentValue":[], "IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory", "ShortView":"SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory"}, "Name":"SubCategories", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory", "ShortView":"SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory"}, "Name":"SubCategories", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}}], "Navigations":[{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"ParentCategory (Category) ToPrincipal Category Inverse: SubCategories", "ShortView":"ParentCategory (Category) ToPrincipal Category Inverse: SubCategories"}, "Name":"ParentCategory", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"ParentCategory (Category) ToPrincipal Category Inverse: SubCategories", "ShortView":"ParentCategory (Category) ToPrincipal Category Inverse: SubCategories"}, "Name":"ParentCategory", "IsReadOnly":false}, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"CurrentValue":[], "IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Product", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Products (IList<Product>) Collection ToDependent Product Inverse: Category", "ShortView":"Products (IList<Product>) Collection ToDependent Product Inverse: Category"}, "Name":"Products", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Product", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Products (IList<Product>) Collection ToDependent Product Inverse: Category", "ShortView":"Products (IList<Product>) Collection ToDependent Product Inverse: Category"}, "Name":"Products", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"CurrentValue":[], "IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory", "ShortView":"SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory"}, "Name":"SubCategories", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory", "ShortView":"SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory"}, "Name":"SubCategories", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Category", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Keys":["Key: Category.Id PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]"}, "DebugView":{"LongView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"Id", "IsReadOnly":false}, "OriginalValue":-9223372036854774804, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Category", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Keys":["Key: Category.Id PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]"}, "DebugView":{"LongView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"Id", "IsReadOnly":false}, "CurrentValue":-9223372036854774804, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"tinyint", "StoreTypeNameBase":"tinyint", "DbType":"Byte", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Byte", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]"}, "DebugView":{"LongView":"CategoryType (byte) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"CategoryType (byte) Required"}, "Name":"CategoryType", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"tinyint", "StoreTypeNameBase":"tinyint", "DbType":"Byte", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Byte", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]"}, "DebugView":{"LongView":"CategoryType (byte) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"CategoryType (byte) Required"}, "Name":"CategoryType", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"InsertTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"InsertTime (DateTime) Required"}, "Name":"InsertTime", "IsReadOnly":false}, "OriginalValue":"2022-09-25T10:35:32.5509768Z", "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"InsertTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"InsertTime (DateTime) Required"}, "Name":"InsertTime", "IsReadOnly":false}, "CurrentValue":"2022-09-25T10:35:32.5509768Z", "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bit", "StoreTypeNameBase":"bit", "DbType":"Boolean", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Boolean", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]"}, "DebugView":{"LongView":"IsRemoved (bool) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"IsRemoved (bool) Required"}, "Name":"IsRemoved", "IsReadOnly":false}, "OriginalValue":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bit", "StoreTypeNameBase":"bit", "DbType":"Boolean", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Boolean", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]"}, "DebugView":{"LongView":"IsRemoved (bool) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"IsRemoved (bool) Required"}, "Name":"IsRemoved", "IsReadOnly":false}, "CurrentValue":false, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Indexes":["Index: Category.Name  Unique"], "TypeMapping":{"StoreTypePostfix":"Size", "StoreType":"nvarchar(50)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "Size":50, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required Index MaxLength(50)\r\n  Annotations: \r\n    MaxLength: 50\r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required Index MaxLength(50)"}, "Name":"Name", "IsReadOnly":false}, "OriginalValue":"سامسونگ", "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Indexes":["Index: Category.Name  Unique"], "TypeMapping":{"StoreTypePostfix":"Size", "StoreType":"nvarchar(50)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "Size":50, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required Index MaxLength(50)\r\n  Annotations: \r\n    MaxLength: 50\r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required Index MaxLength(50)"}, "Name":"Name", "IsReadOnly":false}, "CurrentValue":"سامسونگ", "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull"], "Indexes":["Index: Category.ParentCategoryId "], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]"}, "DebugView":{"LongView":"ParentCategoryId (long?) FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"ParentCategoryId (long?) FK Index"}, "Name":"ParentCategoryId", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull"], "Indexes":["Index: Category.ParentCategoryId "], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]"}, "DebugView":{"LongView":"ParentCategoryId (long?) FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"ParentCategoryId (long?) FK Index"}, "Name":"ParentCategoryId", "IsReadOnly":false}, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"ParentName (string)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"ParentName (string)"}, "Name":"ParentName", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"ParentName (string)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"ParentName (string)"}, "Name":"ParentName", "IsReadOnly":false}, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"RemoveTime (DateTime?)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RemoveTime (DateTime?)"}, "Name":"RemoveTime", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"RemoveTime (DateTime?)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RemoveTime (DateTime?)"}, "Name":"RemoveTime", "IsReadOnly":false}, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"UpdateTime (DateTime?)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UpdateTime (DateTime?)"}, "Name":"UpdateTime", "IsReadOnly":false}, "OriginalValue":"2022-09-25T10:35:32.5509439Z", "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"UpdateTime (DateTime?)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UpdateTime (DateTime?)"}, "Name":"UpdateTime", "IsReadOnly":false}, "CurrentValue":"2022-09-25T10:35:32.5509439Z", "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}}], "References":[{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"ParentCategory (Category) ToPrincipal Category Inverse: SubCategories", "ShortView":"ParentCategory (Category) ToPrincipal Category Inverse: SubCategories"}, "Name":"ParentCategory", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"ParentCategory (Category) ToPrincipal Category Inverse: SubCategories", "ShortView":"ParentCategory (Category) ToPrincipal Category Inverse: SubCategories"}, "Name":"ParentCategory", "IsReadOnly":false}, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}}], "Collections":[{"CurrentValue":[], "IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Product", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Products (IList<Product>) Collection ToDependent Product Inverse: Category", "ShortView":"Products (IList<Product>) Collection ToDependent Product Inverse: Category"}, "Name":"Products", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Product", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Products (IList<Product>) Collection ToDependent Product Inverse: Category", "ShortView":"Products (IList<Product>) Collection ToDependent Product Inverse: Category"}, "Name":"Products", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"CurrentValue":[], "IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory", "ShortView":"SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory"}, "Name":"SubCategories", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Category.Id PK", "DeclaringEntityType":"EntityType: Category", "PrincipalEntityType":"EntityType: Category", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory", "ShortView":"SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory"}, "Name":"SubCategories", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[], "Categories":[], "Products":[], "Brands":[], "ProductFeatures":[], "ProductImages":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"1371f74d-8f43-4855-8127-f00a3cc085a6:0"}, "Metadata":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Category"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Category"}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}}], "IsKeySet":false, "CurrentValues":{"Properties":[{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Category", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Keys":["Key: Category.Id PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]"}, "DebugView":{"LongView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"Id", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"tinyint", "StoreTypeNameBase":"tinyint", "DbType":"Byte", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Byte", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]"}, "DebugView":{"LongView":"CategoryType (byte) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"CategoryType (byte) Required"}, "Name":"CategoryType", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"InsertTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"InsertTime (DateTime) Required"}, "Name":"InsertTime", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bit", "StoreTypeNameBase":"bit", "DbType":"Boolean", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Boolean", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]"}, "DebugView":{"LongView":"IsRemoved (bool) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"IsRemoved (bool) Required"}, "Name":"IsRemoved", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Indexes":["Index: Category.Name  Unique"], "TypeMapping":{"StoreTypePostfix":"Size", "StoreType":"nvarchar(50)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "Size":50, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required Index MaxLength(50)\r\n  Annotations: \r\n    MaxLength: 50\r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required Index MaxLength(50)"}, "Name":"Name", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull"], "Indexes":["Index: Category.ParentCategoryId "], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]"}, "DebugView":{"LongView":"ParentCategoryId (long?) FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"ParentCategoryId (long?) FK Index"}, "Name":"ParentCategoryId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"ParentName (string)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"ParentName (string)"}, "Name":"ParentName", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"RemoveTime (DateTime?)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RemoveTime (DateTime?)"}, "Name":"RemoveTime", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"UpdateTime (DateTime?)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UpdateTime (DateTime?)"}, "Name":"UpdateTime", "IsReadOnly":false}], "EntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    CategoryType (byte) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    InsertTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    IsRemoved (bool) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required Index MaxLength(50)\r\n      Annotations: \r\n        MaxLength: 50\r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentCategoryId (long?) FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentName (string)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RemoveTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UpdateTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId \r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Categories\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    CategoryType (byte) Required\r\n    InsertTime (DateTime) Required\r\n    IsRemoved (bool) Required\r\n    Name (string) Required Index MaxLength(50)\r\n    ParentCategoryId (long?) FK Index\r\n    ParentName (string)\r\n    RemoveTime (DateTime?)\r\n    UpdateTime (DateTime?)\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId "}, "IsReadOnly":false}}, "OriginalValues":{"Properties":[{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Category", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Keys":["Key: Category.Id PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]"}, "DebugView":{"LongView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"Id", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"tinyint", "StoreTypeNameBase":"tinyint", "DbType":"Byte", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Byte", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Byte]"}, "DebugView":{"LongView":"CategoryType (byte) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"CategoryType (byte) Required"}, "Name":"CategoryType", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"InsertTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"InsertTime (DateTime) Required"}, "Name":"InsertTime", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bit", "StoreTypeNameBase":"bit", "DbType":"Boolean", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Boolean", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Boolean]"}, "DebugView":{"LongView":"IsRemoved (bool) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"IsRemoved (bool) Required"}, "Name":"IsRemoved", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Indexes":["Index: Category.Name  Unique"], "TypeMapping":{"StoreTypePostfix":"Size", "StoreType":"nvarchar(50)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "Size":50, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required Index MaxLength(50)\r\n  Annotations: \r\n    MaxLength: 50\r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required Index MaxLength(50)"}, "Name":"Name", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull"], "Indexes":["Index: Category.ParentCategoryId "], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"bigint", "StoreTypeNameBase":"bigint", "DbType":"Int64", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int64", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int64]"}, "DebugView":{"LongView":"ParentCategoryId (long?) FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"ParentCategoryId (long?) FK Index"}, "Name":"ParentCategoryId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"ParentName (string)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"ParentName (string)"}, "Name":"ParentName", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"RemoveTime (DateTime?)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RemoveTime (DateTime?)"}, "Name":"RemoveTime", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "StructuralComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"UpdateTime (DateTime?)\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UpdateTime (DateTime?)"}, "Name":"UpdateTime", "IsReadOnly":false}], "EntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    CategoryType (byte) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    InsertTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    IsRemoved (bool) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required Index MaxLength(50)\r\n      Annotations: \r\n        MaxLength: 50\r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentCategoryId (long?) FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentName (string)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RemoveTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UpdateTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId \r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Categories\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    CategoryType (byte) Required\r\n    InsertTime (DateTime) Required\r\n    IsRemoved (bool) Required\r\n    Name (string) Required Index MaxLength(50)\r\n    ParentCategoryId (long?) FK Index\r\n    ParentName (string)\r\n    RemoveTime (DateTime?)\r\n    UpdateTime (DateTime?)\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId "}, "IsReadOnly":false}}, "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    CategoryType (byte) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    InsertTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    IsRemoved (bool) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required Index MaxLength(50)\r\n      Annotations: \r\n        MaxLength: 50\r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentCategoryId (long?) FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentName (string)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RemoveTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UpdateTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId \r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Categories\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    CategoryType (byte) Required\r\n    InsertTime (DateTime) Required\r\n    IsRemoved (bool) Required\r\n    Name (string) Required Index MaxLength(50)\r\n    ParentCategoryId (long?) FK Index\r\n    ParentName (string)\r\n    RemoveTime (DateTime?)\r\n    UpdateTime (DateTime?)\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId "}, "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"tinyint", "StoreTypeNameBase":"tinyint", "DbType":"Byte", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Byte", "Comparer":{"Type":"System.Byte", "EqualsExpression":{"Type":"System.Func`3[System.Byte,System.Byte,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Byte,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Convert", "Operand":"v", "IsLifted":false, "IsLiftedToNull":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Byte,System.Byte]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Byte", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Byte", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Byte,System.Byte,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Byte,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Convert", "Operand":"v", "IsLifted":false, "IsLiftedToNull":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Byte,System.Byte]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Byte", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Byte", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Byte", "EqualsExpression":{"Type":"System.Func`3[System.Byte,System.Byte,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Byte,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Convert", "Operand":"v", "IsLifted":false, "IsLiftedToNull":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Byte,System.Byte]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Byte", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Byte", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Byte,System.Byte,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Byte,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Convert", "Operand":"v", "IsLifted":false, "IsLiftedToNull":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Byte,System.Byte]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Byte", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Byte", "TailCall":false, "CanReduce":false}}, "StructuralComparer":{"Type":"System.Byte", "EqualsExpression":{"Type":"System.Func`3[System.Byte,System.Byte,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Byte,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Convert", "Operand":"v", "IsLifted":false, "IsLiftedToNull":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Byte,System.Byte]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Byte", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Byte", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Byte,System.Byte,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Byte,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Convert", "Operand":"v", "IsLifted":false, "IsLiftedToNull":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Byte,System.Byte]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Byte", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Byte", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"CategoryType (byte) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"CategoryType (byte) Required"}, "Name":"CategoryType", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"KalaMarket.Domain.Entities.ProductAgg.Category", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"KalaMarket.Domain.Entities.ProductAgg.Category", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    CategoryType (byte) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    InsertTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    IsRemoved (bool) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required Index MaxLength(50)\r\n      Annotations: \r\n        MaxLength: 50\r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentCategoryId (long?) FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    ParentName (string)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RemoveTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UpdateTime (DateTime?)\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId \r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Categories\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Category\r\n  Properties: \r\n    Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    CategoryType (byte) Required\r\n    InsertTime (DateTime) Required\r\n    IsRemoved (bool) Required\r\n    Name (string) Required Index MaxLength(50)\r\n    ParentCategoryId (long?) FK Index\r\n    ParentName (string)\r\n    RemoveTime (DateTime?)\r\n    UpdateTime (DateTime?)\r\n  Navigations: \r\n    ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n    Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n    SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n  Keys: \r\n    Id PK\r\n  Foreign keys: \r\n    Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n  Indexes: \r\n    Name  Unique\r\n    ParentCategoryId "}, "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"tinyint", "StoreTypeNameBase":"tinyint", "DbType":"Byte", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Byte", "Comparer":{"Type":"System.Byte", "EqualsExpression":{"Type":"System.Func`3[System.Byte,System.Byte,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Byte,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Convert", "Operand":"v", "IsLifted":false, "IsLiftedToNull":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Byte,System.Byte]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Byte", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Byte", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Byte,System.Byte,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Byte,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Convert", "Operand":"v", "IsLifted":false, "IsLiftedToNull":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Byte,System.Byte]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Byte", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Byte", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Byte", "EqualsExpression":{"Type":"System.Func`3[System.Byte,System.Byte,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Byte,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Convert", "Operand":"v", "IsLifted":false, "IsLiftedToNull":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Byte,System.Byte]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Byte", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Byte", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Byte,System.Byte,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Byte,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Convert", "Operand":"v", "IsLifted":false, "IsLiftedToNull":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Byte,System.Byte]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Byte", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Byte", "TailCall":false, "CanReduce":false}}, "StructuralComparer":{"Type":"System.Byte", "EqualsExpression":{"Type":"System.Func`3[System.Byte,System.Byte,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Byte,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Convert", "Operand":"v", "IsLifted":false, "IsLiftedToNull":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Byte,System.Byte]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Byte", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Byte", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Byte,System.Byte,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Byte,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Convert", "Operand":"v", "IsLifted":false, "IsLiftedToNull":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Byte,System.Byte]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Byte", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Byte", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"CategoryType (byte) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"CategoryType (byte) Required"}, "Name":"CategoryType", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"CategoryType":1, "Name":"سامسونگ", "SubCategories":[], "Products":[], "Id":0, "InsertTime":"2022-09-25T10:35:32.5509768Z", "UpdateTime":"2022-09-25T10:35:32.5509439Z", "IsRemoved":false}, "State":"Added", "Context":{"Users":[], "UserInRoles":[], "Roles":[{"Name":"Admin", "Id":1, "InsertTime":"2022-09-15T15:48:49.889068Z", "UpdateTime":"2022-09-15T15:48:49.8890621Z", "IsRemoved":false},{"Name":"Operator", "Id":2, "InsertTime":"2022-09-15T15:48:49.8890787Z", "UpdateTime":"2022-09-15T15:48:49.8890732Z", "IsRemoved":false},{"Name":"Customer", "Id":3, "InsertTime":"2022-09-15T15:48:49.8890808Z", "UpdateTime":"2022-09-15T15:48:49.8890801Z", "IsRemoved":false}], "Categories":[{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":["KalaMarket.Domain.Entities.ProductAgg.Category","KalaMarket.Domain.Entities.ProductAgg.Category","KalaMarket.Domain.Entities.ProductAgg.Category","KalaMarket.Domain.Entities.ProductAgg.Category"], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false},{"CategoryType":1, "Name":"مواد غذایی و خواربار", "SubCategories":["KalaMarket.Domain.Entities.ProductAgg.Category","KalaMarket.Domain.Entities.ProductAgg.Category","KalaMarket.Domain.Entities.ProductAgg.Category"], "Id":3, "InsertTime":"2022-09-15T05:22:29.0846088Z", "UpdateTime":"2022-09-15T05:22:29.0846032Z", "IsRemoved":false},{"CategoryType":1, "Name":"الکترونیک", "SubCategories":["KalaMarket.Domain.Entities.ProductAgg.Category","KalaMarket.Domain.Entities.ProductAgg.Category"], "Id":4, "InsertTime":"2022-09-15T05:22:34.6472623Z", "UpdateTime":"2022-09-15T05:22:34.6472574Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم صورت", "ParentCategory":{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":[], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false}, "ParentCategoryId":1, "Id":5, "InsertTime":"2022-09-15T05:22:50.6815228Z", "UpdateTime":"2022-09-15T05:22:50.6815212Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم دست", "ParentCategory":{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":[], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false}, "ParentCategoryId":1, "Id":6, "InsertTime":"2022-09-15T05:26:29.6524952Z", "UpdateTime":"2022-09-15T05:26:29.6524928Z", "IsRemoved":false},{"CategoryType":1, "Name":"کرم پا", "Id":7, "InsertTime":"2022-09-15T05:26:59.4659739Z", "UpdateTime":"2022-09-15T05:26:59.4659621Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم بدن", "ParentCategory":{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":[], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false}, "ParentCategoryId":1, "Id":8, "InsertTime":"2022-09-15T05:27:22.6137622Z", "UpdateTime":"2022-09-15T05:27:22.6137607Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد بهداشتی و آرایشی", "Name":"کرم پوست", "ParentCategory":{"CategoryType":1, "Name":"مواد بهداشتی و آرایشی", "SubCategories":[], "Id":1, "InsertTime":"2022-09-15T05:21:09.7046107Z", "UpdateTime":"2022-09-15T05:21:09.704529Z", "IsRemoved":false}, "ParentCategoryId":1, "Id":9, "InsertTime":"2022-09-15T05:27:37.3017153Z", "UpdateTime":"2022-09-15T05:27:37.3017126Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد غذایی و خواربار", "Name":"آشامیدنی", "ParentCategory":{"CategoryType":1, "Name":"مواد غذایی و خواربار", "SubCategories":[], "Id":3, "InsertTime":"2022-09-15T05:22:29.0846088Z", "UpdateTime":"2022-09-15T05:22:29.0846032Z", "IsRemoved":false}, "ParentCategoryId":3, "Id":10, "InsertTime":"2022-09-18T02:30:59.3150654Z", "UpdateTime":"2022-09-18T02:30:59.3150614Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد غذایی و خواربار", "Name":"حبوبات", "ParentCategory":{"CategoryType":1, "Name":"مواد غذایی و خواربار", "SubCategories":[], "Id":3, "InsertTime":"2022-09-15T05:22:29.0846088Z", "UpdateTime":"2022-09-15T05:22:29.0846032Z", "IsRemoved":false}, "ParentCategoryId":3, "Id":11, "InsertTime":"2022-09-18T02:31:14.4232151Z", "UpdateTime":"2022-09-18T02:31:14.4232136Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"مواد غذایی و خواربار", "Name":"شیرینی", "ParentCategory":{"CategoryType":1, "Name":"مواد غذایی و خواربار", "SubCategories":[], "Id":3, "InsertTime":"2022-09-15T05:22:29.0846088Z", "UpdateTime":"2022-09-15T05:22:29.0846032Z", "IsRemoved":false}, "ParentCategoryId":3, "Id":12, "InsertTime":"2022-09-18T02:31:35.7856579Z", "UpdateTime":"2022-09-18T02:31:35.7856553Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"الکترونیک", "Name":"لپ تاب", "ParentCategory":{"CategoryType":1, "Name":"الکترونیک", "SubCategories":[], "Id":4, "InsertTime":"2022-09-15T05:22:34.6472623Z", "UpdateTime":"2022-09-15T05:22:34.6472574Z", "IsRemoved":false}, "ParentCategoryId":4, "Id":13, "InsertTime":"2022-09-18T02:31:50.3283406Z", "UpdateTime":"2022-09-18T02:31:50.328338Z", "IsRemoved":false},{"CategoryType":2, "ParentName":"الکترونیک", "Name":"موبایل", "ParentCategory":{"CategoryType":1, "Name":"الکترونیک", "SubCategories":[], "Id":4, "InsertTime":"2022-09-15T05:22:34.6472623Z", "UpdateTime":"2022-09-15T05:22:34.6472574Z", "IsRemoved":false}, "ParentCategoryId":4, "Id":14, "InsertTime":"2022-09-18T02:32:10.8522021Z", "UpdateTime":"2022-09-18T02:32:10.8521984Z", "IsRemoved":false},{"CategoryType":1, "Name":"اپل", "Id":15, "InsertTime":"2022-09-25T14:00:54.0724198Z", "UpdateTime":"2022-09-25T14:00:54.0724015Z", "IsRemoved":false},{"CategoryType":1, "Name":"سامسونگ", "Id":16, "InsertTime":"2022-09-25T14:02:07.5711633Z", "UpdateTime":"2022-09-25T14:02:07.5711584Z", "IsRemoved":false}], "Products":[], "Brands":[], "ProductFeatures":[], "Database":{"AutoTransactionsEnabled":true, "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Category {Id: -9223372036854774804} Added\r\n  Id: -9223372036854774804 PK Temporary\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:05:32 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:05:32 PM'\r\n  ParentCategory: <null>\r\n  Products: []\r\n  SubCategories: []\r\nCategory {Id: 1} Unchanged\r\n  Id: 1 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/15/2022 5:21:09 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'مواد بهداشتی و آرایشی'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:21:09 AM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: [{Id: 5}, {Id: 6}, {Id: 8}, {Id: 9}]\r\nCategory {Id: 3} Unchanged\r\n  Id: 3 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/15/2022 5:22:29 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'مواد غذایی و خواربار'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:22:29 AM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: [{Id: 10}, {Id: 11}, {Id: 12}]\r\nCategory {Id: 4} Unchanged\r\n  Id: 4 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/15/2022 5:22:34 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'الکترونیک'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:22:34 AM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: [{Id: 13}, {Id: 14}]\r\nCategory {Id: 5} Unchanged\r\n  Id: 5 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/15/2022 5:22:50 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم صورت'\r\n  ParentCategoryId: 1 FK\r\n  ParentName: 'مواد بهداشتی و آرایشی'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:22:50 AM'\r\n  ParentCategory: {Id: 1}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 6} Unchanged\r\n  Id: 6 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/15/2022 5:26:29 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم دست'\r\n  ParentCategoryId: 1 FK\r\n  ParentName: 'مواد بهداشتی و آرایشی'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:26:29 AM'\r\n  ParentCategory: {Id: 1}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 7} Unchanged\r\n  Id: 7 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/15/2022 5:26:59 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم پا'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:26:59 AM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 8} Unchanged\r\n  Id: 8 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/15/2022 5:27:22 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم بدن'\r\n  ParentCategoryId: 1 FK\r\n  ParentName: 'مواد بهداشتی و آرایشی'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:27:22 AM'\r\n  ParentCategory: {Id: 1}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 9} Unchanged\r\n  Id: 9 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/15/2022 5:27:37 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'کرم پوست'\r\n  ParentCategoryId: 1 FK\r\n  ParentName: 'مواد بهداشتی و آرایشی'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 5:27:37 AM'\r\n  ParentCategory: {Id: 1}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 10} Unchanged\r\n  Id: 10 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:30:59 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'آشامیدنی'\r\n  ParentCategoryId: 3 FK\r\n  ParentName: 'مواد غذایی و خواربار'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:30:59 AM'\r\n  ParentCategory: {Id: 3}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 11} Unchanged\r\n  Id: 11 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:31:14 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'حبوبات'\r\n  ParentCategoryId: 3 FK\r\n  ParentName: 'مواد غذایی و خواربار'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:31:14 AM'\r\n  ParentCategory: {Id: 3}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 12} Unchanged\r\n  Id: 12 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:31:35 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'شیرینی'\r\n  ParentCategoryId: 3 FK\r\n  ParentName: 'مواد غذایی و خواربار'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:31:35 AM'\r\n  ParentCategory: {Id: 3}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 13} Unchanged\r\n  Id: 13 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:31:50 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'لپ تاب'\r\n  ParentCategoryId: 4 FK\r\n  ParentName: 'الکترونیک'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:31:50 AM'\r\n  ParentCategory: {Id: 4}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 14} Unchanged\r\n  Id: 14 PK\r\n  CategoryType: 2\r\n  InsertTime: '9/18/2022 2:32:10 AM'\r\n  IsRemoved: 'False'\r\n  Name: 'موبایل'\r\n  ParentCategoryId: 4 FK\r\n  ParentName: 'الکترونیک'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/18/2022 2:32:10 AM'\r\n  ParentCategory: {Id: 4}\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 15} Unchanged\r\n  Id: 15 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:00:54 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'اپل'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:00:54 PM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: <null>\r\nCategory {Id: 16} Unchanged\r\n  Id: 16 PK\r\n  CategoryType: 1\r\n  InsertTime: '9/25/2022 2:02:07 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'سامسونگ'\r\n  ParentCategoryId: <null> FK\r\n  ParentName: <null>\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/25/2022 2:02:07 PM'\r\n  ParentCategory: <null>\r\n  Products: <null>\r\n  SubCategories: <null>\r\nRole {Id: 1} Unchanged\r\n  Id: 1 PK\r\n  InsertTime: '9/15/2022 3:48:49 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'Admin'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 3:48:49 PM'\r\n  UserInRoles: <null>\r\nRole {Id: 2} Unchanged\r\n  Id: 2 PK\r\n  InsertTime: '9/15/2022 3:48:49 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'Operator'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 3:48:49 PM'\r\n  UserInRoles: <null>\r\nRole {Id: 3} Unchanged\r\n  Id: 3 PK\r\n  InsertTime: '9/15/2022 3:48:49 PM'\r\n  IsRemoved: 'False'\r\n  Name: 'Customer'\r\n  RemoveTime: <null>\r\n  UpdateTime: '9/15/2022 3:48:49 PM'\r\n  UserInRoles: <null>\r\n", "ShortView":"Category {Id: -9223372036854774804} Added FK {ParentCategoryId: <null>}\r\nCategory {Id: 1} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 3} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 4} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 5} Unchanged FK {ParentCategoryId: 1}\r\nCategory {Id: 6} Unchanged FK {ParentCategoryId: 1}\r\nCategory {Id: 7} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 8} Unchanged FK {ParentCategoryId: 1}\r\nCategory {Id: 9} Unchanged FK {ParentCategoryId: 1}\r\nCategory {Id: 10} Unchanged FK {ParentCategoryId: 3}\r\nCategory {Id: 11} Unchanged FK {ParentCategoryId: 3}\r\nCategory {Id: 12} Unchanged FK {ParentCategoryId: 3}\r\nCategory {Id: 13} Unchanged FK {ParentCategoryId: 4}\r\nCategory {Id: 14} Unchanged FK {ParentCategoryId: 4}\r\nCategory {Id: 15} Unchanged FK {ParentCategoryId: <null>}\r\nCategory {Id: 16} Unchanged FK {ParentCategoryId: <null>}\r\nRole {Id: 1} Unchanged\r\nRole {Id: 2} Unchanged\r\nRole {Id: 3} Unchanged\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Brands\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      CategoryType (byte) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentCategoryId (long?) FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ParentName (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Categories\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      BrandId (ushort?) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      CategoryId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Displayed (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Inventory (int) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required Index MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      Price (decimal) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Products\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      KeyValue (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductFeatures\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      ProductName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Src (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: ProductImages\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required MaxLength(100)\r\n        Annotations: \r\n          MaxLength: 100\r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Roles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n        Annotations: \r\n          MaxLength: 254\r\n          SqlServer:ValueGenerationStrategy: None\r\n          Unicode: False\r\n      FullName (string) Required MaxLength(50)\r\n        Annotations: \r\n          MaxLength: 50\r\n          SqlServer:ValueGenerationStrategy: None\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      InsertTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      IsRemoved (bool) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RemoveTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RoleId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UpdateTime (DateTime?)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserId (long) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId \r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: UserInRoles\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 6.0.7\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: Brand\r\n    Properties: \r\n      Id (ushort) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Products (ICollection<Product>) Collection ToDependent Product Inverse: Brand\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Name  Unique\r\n  EntityType: Category\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      CategoryType (byte) Required\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      ParentCategoryId (long?) FK Index\r\n      ParentName (string)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      ParentCategory (Category) ToPrincipal Category Inverse: SubCategories\r\n      Products (IList<Product>) Collection ToDependent Product Inverse: Category\r\n      SubCategories (IList<Category>) Collection ToDependent Category Inverse: ParentCategory\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Category {'ParentCategoryId'} -> Category {'Id'} ToDependent: SubCategories ToPrincipal: ParentCategory ClientSetNull\r\n    Indexes: \r\n      Name  Unique\r\n      ParentCategoryId \r\n  EntityType: Product\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      BrandId (ushort?) Required FK Index\r\n      CategoryId (long) Required FK Index\r\n      Description (string) Required\r\n      Displayed (bool) Required\r\n      InsertTime (DateTime) Required\r\n      Inventory (int) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required Index MaxLength(50)\r\n      Price (decimal) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Brand (Brand) ToPrincipal Brand Inverse: Products\r\n      Category (Category) ToPrincipal Category Inverse: Products\r\n      Features (ICollection<ProductFeatures>) Collection ToDependent ProductFeatures Inverse: Product\r\n      Images (ICollection<ProductImages>) Collection ToDependent ProductImages Inverse: Product\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      Product {'BrandId'} -> Brand {'Id'} ToDependent: Products ToPrincipal: Brand Cascade\r\n      Product {'CategoryId'} -> Category {'Id'} ToDependent: Products ToPrincipal: Category Cascade\r\n    Indexes: \r\n      BrandId \r\n      CategoryId \r\n      Name \r\n  EntityType: ProductFeatures\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      KeyName (string) Required MaxLength(50)\r\n      KeyValue (string) Required MaxLength(50)\r\n      ProductId (long) Required FK Index\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Features\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductFeatures {'ProductId'} -> Product {'Id'} ToDependent: Features ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: ProductImages\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      ProductId (long) Required FK Index\r\n      ProductName (string) Required\r\n      RemoveTime (DateTime?)\r\n      Src (string) Required\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      Product (Product) ToPrincipal Product Inverse: Images\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      ProductImages {'ProductId'} -> Product {'Id'} ToDependent: Images ToPrincipal: Product Cascade\r\n    Indexes: \r\n      ProductId \r\n  EntityType: Role\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Name (string) Required MaxLength(100)\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: Role\r\n    Keys: \r\n      Id PK\r\n  EntityType: User\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Email (string) Required Index MaxLength(254) Ansi\r\n      FullName (string) Required MaxLength(50)\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      Password (string) Required\r\n      RemoveTime (DateTime?)\r\n      UpdateTime (DateTime?)\r\n    Navigations: \r\n      UserInRoles (ICollection<UserInRole>) Collection ToDependent UserInRole Inverse: User\r\n    Keys: \r\n      Id PK\r\n    Indexes: \r\n      Email  Unique\r\n  EntityType: UserInRole\r\n    Properties: \r\n      Id (long) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      InsertTime (DateTime) Required\r\n      IsRemoved (bool) Required\r\n      RemoveTime (DateTime?)\r\n      RoleId (long) Required FK Index\r\n      UpdateTime (DateTime?)\r\n      UserId (long) Required FK Index\r\n    Navigations: \r\n      Role (Role) ToPrincipal Role Inverse: UserInRoles\r\n      User (User) ToPrincipal User Inverse: UserInRoles\r\n    Keys: \r\n      Id PK\r\n    Foreign keys: \r\n      UserInRole {'RoleId'} -> Role {'Id'} ToDependent: UserInRoles ToPrincipal: Role Cascade\r\n      UserInRole {'UserId'} -> User {'Id'} ToDependent: UserInRoles ToPrincipal: User Cascade\r\n    Indexes: \r\n      RoleId \r\n      UserId "}, "IsReadOnly":false}}, "IsKeySet":false}}], "IsKeySet":false}], "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Source":"Microsoft.EntityFrameworkCore.Relational", "HResult":-2146233088, "StackTrace":"   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)"}, "EventId": 10000, "EventName": "Microsoft.EntityFrameworkCore.Update.SaveChangesFailed" }, "time": "2022-09-25 14:05:32.5749" }
